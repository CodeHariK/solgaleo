/*
src/pagination.tsx
src/tab.tsx
src/breadcrumb.tsx
src/header.tsx
src/modal.tsx
*/

.light {
    --ModalContent-bg: #4d84dc40;
}

.night {
    --ModalContent-bg: #4d84dc40;
}

.PaginationNav {
    margin-top: 1.5rem;
    display: flex;
    align-items: center;
    justify-content: center;
}

.PaginationList {
    display: flex;
    align-items: center;
    gap: 0.25rem;
    list-style: none;
    padding: 0;
    margin: 0;
}

.PaginationButton {
    display: flex;
    align-items: center;
    justify-content: center;
    height: 2rem;
    padding: 0 0.75rem;
    border: 1px solid var(--border-color, #e5e7eb);
    background: var(--bg-color, white);
    color: var(--text-color, #6b7280);
    transition: all 0.2s ease-in-out;
    cursor: pointer;
}

.PaginationButton:hover:not(:disabled):not(.PaginationActive) {
    background: var(--hover-bg, #f3f4f6);
    color: var(--hover-text, #374151);
    border-color: var(--hover-border, #d1d5db);
}

.PaginationActive {
    background: var(--active-bg, #4f46e5) !important;
    color: white !important;
    border-color: var(--active-bg, #4f46e5) !important;
}

.PaginationItem {
    transition: transform 0.2s ease-in-out;
}

.PaginationItem:hover {
    transform: translateY(-1px);
}

.tabs-container {
    display: flex;
    flex-direction: column;
    width: 100%;
    height: 100%;
}

.tabs-levels {
    display: flex;
    flex-direction: column;
}

.tab-level {
    display: flex;
    flex-direction: row;
}

.tab-button {
    padding: 0.2rem .5rem;
    border: none;
    transition: all 0.2s ease;
    background: var(--primary-color, #565656);
}

.tab-button.active {
    background: var(--primary-color, #972579);
    color: white;
}

.tab-content {
    flex: 1;
    overflow: auto;
    background: #f94d4d;
}

.Breadcrumb {
    box-shadow: 0 8px 14px -2px rgba(0, 0, 0, 0.1),
        0 4px 6px -2px rgba(0, 0, 0, 0.05);
    padding: 0.75rem 1.25rem;
}

.BreadcrumbLinks {
    list-style-type: none;
    display: flex;
    gap: 1rem;
    align-items: center;
    margin: 0;
    padding: 0;
}

.BreadcrumbLink {
    color: #9ca3af;
    text-decoration: none;
    transition: color 0.2s;
}

.BreadcrumbLink:hover {
    color: #e05050;
}

.BreadcrumbSeparator {
    color: #d1d5db;
    margin: 0 0.5rem;
}

.HeaderLink {
    display: block;
    padding: 0.5rem 1rem;
    font-size: 0.875rem;
    color: var(--text-color, #374151);
    text-decoration: none;
    transition: color 0.2s;
}

.HeaderLink:hover {
    color: var(--link-hover-color, #4f46e5);
}

.HeaderLink:active {
    color: var(--link-active-color, #4338ca);
}

.HeaderNav {
    max-width: 1280px;
    margin: 0 auto;
    padding: 0 1rem;
    display: flex;
    align-items: center;
    justify-content: space-between;
    font-smooth: antialiased;
}

.HeaderLeft {
    display: flex;
    align-items: center;
    gap: 2rem;
}

.HeaderLogo {
    text-decoration: none;
}

.HeaderLogoContent {
    display: flex;
    align-items: center;
    gap: 0.5rem;
}

.HeaderIcon {
    min-width: 4rem;
}

.HeaderIcon img {
    display: block;
    width: auto;
    height: 3rem;
}

.HeaderLinks {
    display: none;
    list-style-type: none;
    align-items: center;
    justify-content: flex-start;
    gap: 0.5rem;
    padding: 0.75rem 0;
}

.HeaderRight {
    display: flex;
    align-items: center;
}

@media (min-width: 1536px) {
    .HeaderNav {
        padding: 0;
    }
}

@media (min-width: 1024px) {
    .HeaderLinks {
        display: flex;
    }
}

@media (min-width: 1024px) {
    .HeaderRight {
        gap: 0.5rem;
    }
}

.TransitionContainer {
    position: relative;
}

.TransitionItem {
    opacity: 0;
    transition: opacity 300ms ease-in-out;
    position: absolute;
    top: 0;
    left: 0;
    pointer-events: none;
}

.Show {
    opacity: 1;
    position: relative;
    pointer-events: auto;
}

.Hide {
    opacity: 0;
    position: absolute;
    pointer-events: none;
}

.ModalOverlay {
    position: fixed;
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;
    display: flex;
    align-items: center;
    justify-content: center;
    opacity: 0;
    transition: opacity 0.2s ease-in-out;
    z-index: 50;
}

.ModalOverlay.Show {
    opacity: 1;
}

.ModalContent {
    background: var(--ModalContent-bg);
    padding: 2rem;
    border-radius: 0.5rem;
    box-shadow: 0 4px 6px -1px rgba(0, 0, 0, 0.1);
    max-width: 90%;
    max-height: 90vh;
    overflow-y: auto;
    opacity: 0;
    transition: all 0.2s ease-in-out;
    position: relative;
    max-width: min(90vw, var(--modal-max-width, 600px));
    max-height: min(90vh, var(--modal-max-height, 800px));
}

.ModalContent.Show {
    transform: scale(1);
    opacity: 1;
}

.ModalPositioned {
    position: fixed;
    transform-origin: center;
}

.ModalClose {
    position: absolute;
    top: 1rem;
    right: 1rem;
    border: none;
    background: red;
    cursor: pointer;
    padding: 0.5rem;
    border-radius: 0.25rem;
    transition: background 0.2s;
}

.ModalClose:hover {
    background: rgba(0, 0, 0, 0.1);
}

.ModalContent[data-position="top"]::after {
    content: '';
    position: absolute;
    bottom: -10px;
    left: 50%;
    transform: translateX(-50%);
    border-left: 10px solid transparent;
    border-right: 10px solid transparent;
    border-top: 10px solid var(--modal-bg, white);
}

.ModalContent[data-position="bottom"]::after {
    content: '';
    position: absolute;
    top: -10px;
    left: 50%;
    transform: translateX(-50%);
    border-left: 10px solid transparent;
    border-right: 10px solid transparent;
    border-bottom: 10px solid var(--modal-bg, white);
}

.ModalContent[data-position="left"]::after {
    content: '';
    position: absolute;
    right: -10px;
    top: 50%;
    transform: translateY(-50%);
    border-top: 10px solid transparent;
    border-bottom: 10px solid transparent;
    border-left: 10px solid var(--modal-bg, white);
}

.ModalContent[data-position="right"]::after {
    content: '';
    position: absolute;
    left: -10px;
    top: 50%;
    transform: translateY(-50%);
    border-top: 10px solid transparent;
    border-bottom: 10px solid transparent;
    border-right: 10px solid var(--modal-bg, white);
}

.ModalFade {
    opacity: 0;
    transition: opacity 0.3s ease-in-out;
}

.ModalSlide {
    opacity: 0;
    transform: translateY(20px);
    transition: all 0.3s ease-in-out;
}

.ModalScale {
    opacity: 0;
    transition: all 0.3s ease-in-out;
}

.Show.ModalFade {
    opacity: 1;
}

.Show.ModalSlide {
    opacity: 1;
    transform: translateY(0);
}

.Show.ModalScale {
    opacity: 1;
    transform: scale(1);
}
