/*
src/position.tsx
src/gridlayout.tsx
src/heading.tsx
src/dropdown.tsx
src/button.tsx
src/theme_toggle.tsx
src/input.tsx
*/

.light {
    --SolPositionBox--button-col: #9c40ca;
    --SolPositionBox--button-bg: transparent;
    --SolPositionBox--button-border: none;
    --SolPositionBox--button-col-hover: #90328b;
    --SolPositionBox--button-background-color-hover: #efefef;
    --SolDropdown-bg: #e0e0e0;
    --SolDropdownHeader-col: #9c40ca;
    --SolDropdownHeader-bg: #cfcfcf;
    --SolDropdownHeader-border: none;
    --SolDropdownItem-col: #343434;
    --SolDropdownItem-bg: #ebebeb;
    --SolDropdownItem-border: none;
    --SolDropdownItem-col-hover: #d4d4d4;
    --SolDropdownItem-bg-hover: #6b6b6b;
    --icon-bg: #73737346;
    --icon-border-radius: 100rem;
    --icon-hover-bg: #a465a7;
    --mat-color: #ffffff;
    --mat-bg: #5d2c5f;
    --mat-border: 0px solid #cbd5e1;
    --mat-hover-color: #ffffff;
    --mat-hover-bg: #a465a7;
    --out-color: #475569;
    --out-bg: transparent;
    --out-border: 1px solid #cbd5e1;
    --out-hover-color: #6636e8;
    --out-hover-bg: #c2c2c238;
    --button-col: black;
    --icon-border: 0px solid #cbd5e1;
    --theme-toggle-col: #60A5FA;
    --theme-toggle-bg-hover: #F3F4F6;
    --input-accent-color: #7a23b4;
    --label-disabled-color: #6B7280;
    --label-col: #111827;
    --label-p-col: #6B7280;
    --input-bg: #ffffff;
    --label-transform-x: 0.6rem;
    --label-transform-y: -1.0rem;
    --label-scale: 0.85;
    --input-label-focus-color: #983daf;
    --input-label-focus-bg: white;
    --Input-Input-input--Input-textarea-col: #111827;
    --Input-Input--input-col-placeholder: #ae81e4;
    --Input-label-col: #6B7280;
    --Input-label-border: 1px solid transparent;
    --ErrorText-col: red;
}

.night {
    --SolPositionBox--button-col: #9c40ca;
    --SolPositionBox--button-bg: transparent;
    --SolPositionBox--button-border: none;
    --SolPositionBox--button-col-hover: #faa0f6;
    --SolPositionBox--button-background-color-hover: #353535;
    --SolDropdown-bg: #575757;
    --SolDropdownHeader-col: #8a87e3;
    --SolDropdownHeader-bg: #454545;
    --SolDropdownHeader-border: none;
    --SolDropdownItem-col: #f8f8f8;
    --SolDropdownItem-bg: #4f4f4f;
    --SolDropdownItem-border: none;
    --SolDropdownItem-col-hover: #4b4b4b;
    --SolDropdownItem-bg-hover: #d7d7d7;
    --icon-bg: #73737346;
    --icon-border-radius: 100rem;
    --icon-hover-bg: #a465a7;
    --mat-color: #ffffff;
    --mat-bg: #5d2c5f;
    --mat-border: 0px solid #cbd5e1;
    --mat-hover-color: #ffffff;
    --mat-hover-bg: #a465a7;
    --out-color: #fff;
    --out-bg: transparent;
    --out-border: 1px solid #cbd5e1;
    --out-hover-color: #fff;
    --out-hover-bg: #7d8dff4d;
    --button-col: white;
    --icon-border: 0px solid #cbd5e1;
    --theme-toggle-col: #3B82F6 ;
    --theme-toggle-bg-hover: #374151 ;
    --input-accent-color: #7a23b4;
    --label-disabled-color: #9CA3AF;
    --label-col: #9b51ef ;
    --label-p-col: #ae93cc;
    --input-bg: #3b3b3b;
    --label-transform-x: 0.6rem;
    --label-transform-y: -1.0rem;
    --label-scale: 0.85;
    --input-label-focus-color: #983daf;
    --input-label-focus-bg: white;
    --Input-Input-input--Input-textarea-col: #ffffff;
    --Input-Input--input-col-placeholder: #ae81e4;
    --Input-label-col: #A1A1AA;
    --Input-label-border: 1px solid transparent;
    --ErrorText-col: red;
}

.SolPositionBox {
    display: inline-flex;
}

.SolPositionBox>div {
    position: fixed;
    inset: 0px;
    z-index: 10;
    pointer-events: none;
}

.SolPositionBox>button {
    color: var(--SolPositionBox--button-col);
    background: var(--SolPositionBox--button-bg);
    border: var(--SolPositionBox--button-border);
    display: inline-flex;
    padding-top: 0.75rem;
    padding-bottom: 0.75rem;
    padding-left: 1rem;
    padding-right: 1rem;
    column-gap: 0.5rem;
    align-items: center;
    border-radius: 0.5rem;
    font-size: 0.875rem;
    line-height: 1.25rem;
    font-weight: 500;
}

.SolPositionBox>button:hover {
    color: var(--SolPositionBox--button-col-hover);
    background-color: var(--SolPositionBox--button-background-color-hover);
}

.SolDragBox {
    position: fixed;
    inset: 0px;
    background-color: #FECACA;
    pointer-events: none;
}

.SolDragBox>div {
    display: flex;
    padding: 1rem;
    justify-content: center;
    align-items: center;
    width: 10rem;
    height: 10rem;
    color: #ffffff;
    background-color: #3B82F6;
    cursor: move;
    pointer-events: auto;
}

.GridLayout {
    width: 100%;
    height: 100vh;
    display: grid;
    gap: 1rem;
}

.GridLayoutFixed {
    grid-template-areas: "header  header  header"
        "left   middle  right"
        "footer footer  footer";
    grid-template-columns: minmax(200px, 15%) 1fr minmax(200px, 15%);
    grid-template-rows: auto 1fr auto;
}

.GridLayoutScroll {
    grid-template-areas: "left   middle  right";
    grid-template-columns: minmax(200px, 15%) 1fr minmax(200px, 15%);
    grid-template-rows: 1fr;
    overflow-y: auto;
}

.GridHeader {
    grid-area: header;
    background: var(--header-bg, #f3f4f6);
    padding: 1rem;
}

.GridFooter {
    grid-area: footer;
    background: var(--footer-bg, #f3f4f6);
    padding: 1rem;
}

.GridLeft {
    grid-area: left;
    overflow-y: auto;
    background: var(--left-bg, #ffffff);
    border-right: 1px solid var(--border-color, #e5e7eb);
}

.GridRight {
    grid-area: right;
    overflow-y: auto;
    background: var(--right-bg, #ffffff);
    border-left: 1px solid var(--border-color, #e5e7eb);
}

.GridMiddle {
    grid-area: middle;
    overflow-y: auto;
    background: var(--middle-bg, #ffffff);
}

.GridScrollContainer {
    display: flex;
    flex-direction: column;
    min-height: 100%;
}

.GridContent {
    flex: 1;
    overflow-y: auto;
    padding: 1rem;
}

.GridLayoutFlow {
    grid-template-areas: "header header header"
        "left  middle right";
    grid-template-columns: minmax(200px, 15%) 1fr minmax(200px, 15%);
    grid-template-rows: auto 1fr;
    overflow-y: auto;
    max-height: 100vh;
}

.GridLayoutFlow .GridLeft,
.GridLayoutFlow .GridRight {
    position: static;
    height: auto;
    padding-top: 1rem;
    border: none;
    border-right: 1px solid var(--border-color, #e5e7eb);
    overflow: visible;
}

.GridLayoutFlow .GridRight {
    border-right: none;
    border-left: 1px solid var(--border-color, #e5e7eb);
}

.GridLayoutFlow .GridMiddle {
    overflow: visible;
}

.GridLayoutFlow .GridScrollContainer {
    min-height: auto;
}

.GridLayoutFlow .GridContent {
    overflow: visible;
}

.GridLayoutFlow .GridFooter {
    grid-column: 1 / -1;
    margin-top: 1rem;
}

.ListContainer {
    padding: 1rem;
}

.List {
    list-style: none;
    padding: 0;
    margin: 0;
    display: flex;
    flex-direction: column;
    gap: 1rem;
}

.ListItem {
    min-height: 200px;
    border-radius: 0.5rem;
    padding: 1.5rem;
    color: white;
    font-weight: 500;
    display: flex;
    align-items: center;
    justify-content: center;
    box-shadow: 0 4px 6px -1px rgb(0 0 0 / 0.1);
    transition: transform 0.2s ease-in-out;
}

.ListItem:hover {
    transform: translateY(-2px);
}

.Red {
    background: linear-gradient(135deg, #ef4444 0%, #dc2626 100%);
}

.Orange {
    background: linear-gradient(135deg, #f97316 0%, #ea580c 100%);
}

.Blue {
    background: linear-gradient(135deg, #3b82f6 0%, #2563eb 100%);
}

.Green {
    background: linear-gradient(135deg, #22c55e 0%, #16a34a 100%);
}

h1 {
    font-size: 1.9rem;
    line-height: 2rem;
    font-weight: 600;
    letter-spacing: -0.025em;
}

h2 {
    font-size: 1.7rem;
    line-height: 1.8rem;
    font-weight: 600;
    letter-spacing: -0.025em;
}

h3 {
    font-size: 1.5rem;
    line-height: 1.8rem;
    font-weight: 500;
    letter-spacing: -0.025em;
}

h4 {
    font-size: 1.3rem;
    line-height: 1.7rem;
    font-weight: 500;
    letter-spacing: -0.025em;
}

h5 {
    font-size: 1.1rem;
    line-height: 1.6rem;
    font-weight: 500;
    letter-spacing: -0.025em;
}

h6 {
    font-size: 1rem;
    line-height: 1.4rem;
    font-weight: 400;
}

p,
li {
    font-size: 0.85rem;
    line-height: 1.25rem;
}

@media (min-width: 768px) {
}

@media (min-width: 1024px) {}

.avatar {
    display: inline-block;
    object-fit: cover;
    object-position: center;
    position: relative;
    width: 2.25rem;
    height: 2.25rem;
    border-radius: 9999px;
}

.SolDropdown {
    background: var(--SolDropdown-bg);
    border-radius: .3rem;
    padding: .3rem;
    box-shadow: 0 1px 3px 0 rgba(0, 0, 0, 0.1), 0 1px 2px 0 rgba(0, 0, 0, 0.06);
}

.SolDropdownHeader {
    color: var(--SolDropdownHeader-col);
    background: var(--SolDropdownHeader-bg);
    border: var(--SolDropdownHeader-border);
    padding: 0.3rem;
}

.SolDropdownItem {
    color: var(--SolDropdownItem-col);
    background: var(--SolDropdownItem-bg);
    border: var(--SolDropdownItem-border);
    display: inline-flex;
    padding: 0.3rem;
    align-items: center;
    width: 100%;
}

.SolDropdownItem:hover {
    color: var(--SolDropdownItem-col-hover);
    background: var(--SolDropdownItem-bg-hover);
}

button {
    display: flex;
    gap: 0.5rem;
    padding: 0.625rem 1rem;
    font-size: 0.75rem;
    font-weight: 600;
    color: var(--button-col);
    background: transparent;
    border: none;
    transition-property: all;
    transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
    transition-duration: 300ms;
    user-select: none;
    cursor: pointer;
}

button:hover {
    opacity: 0.9;
}

.IconButton {
    padding: .5rem;
    background: var(--icon-bg);
    border-radius: var(--icon-border-radius);
}

.IconButton:hover {
    background: var(--icon-hover-bg);
}

.MaterialButton {
    color: var(--mat-color);
    background: var(--mat-bg);
    border: var(--mat-border);
}

.MaterialButton:hover {
    color: var(--mat-hover-color);
    background: var(--mat-hover-bg);
}

.OutlinedButton {
    color: var(--out-color);
    background: var(--out-bg);
    border: var(--out-border);
}

.OutlinedButton:hover {
    color: var(--out-hover-color);
    background: var(--out-hover-bg);
}

#theme-toggle {
    padding: 0.625rem;
    border-radius: 0.5rem;
    color: var(--theme-toggle-col);
}

#theme-toggle:hover {
    background: var(--theme-toggle-bg-hover);
}

fieldset {
    border: none;
}

fieldset div {
    display: flex;
    align-items: center;
}

input[type="checkbox"],
input[type="radio"] {
    accent-color: var(--input-accent-color);
    width: 1rem;
    height: 1rem;
    margin: .25rem;
}

input[type="checkbox"]:disabled,
input[type="radio"]:disabled {
    cursor: not-allowed;
}

select {
    padding: 0.5rem 1rem;
    border-radius: 0.5rem;
    border-width: 1px;
    border-color: #D1D5DB;
    outline-style: none;
    font-size: 0.875rem;
    line-height: 1.25rem;
    color: #ececec;
    background-color: #2b2a2a;
}

label {
    color: var(--label-col);
    background: transparent;
    font-size: 0.875rem;
    line-height: 1.25rem;
    font-weight: 500;
    user-select: none;
    padding: 0.25rem;
}

label[aria-disabled="true"] {
    color: var(--label-disabled-color);
    cursor: not-allowed;
    opacity: 0.75;
}

label p {
    font-size: 0.75rem;
    line-height: 1rem;
    font-weight: 400;
    color: var(--label-p-col);
}

.Input {
    position: relative;
    background: var(--input-bg);
    border-bottom: 2px solid #d1d5db;
}

.Input>input,
.Input>textarea {
    width: 100%;
    padding: .5rem;
    font-size: 0.875rem;
    color: var(--Input-Input-input--Input-textarea-col);
    background: transparent;
    border: none;
    outline: none;
    resize: vertical;
}

.Input> input:disabled,
.Input> textarea:disabled {
    opacity: 0.5;
    cursor: not-allowed;
}

.Input> input:disabled ~ label,
.Input> textarea:disabled ~ label {
    opacity: 0.5;
}

.Input> input::placeholder,
.Input> textarea::placeholder {
    color: var(--Input-Input--input-col-placeholder);
}

.Input[data-has-label="true"] > input::placeholder,
.Input[data-has-label="true"] > textarea::placeholder {
    color: transparent;
}

.Input[data-has-icon="true"] > input ~ label,
.Input[data-has-icon="true"] > textarea ~ label {
    left: 3rem;
}

.Input> input:focus::placeholder,
.Input> textarea:focus::placeholder {
    color: var(--Input-Input--input-col-placeholder);
    transition: color 0.2s ease-out;
}

.Input label {
    position: absolute;
    top: 0rem;
    left: 1rem;
    color: var(--Input-label-col);
    border: var(--Input-label-border);
    font-size: 0.875rem;
    white-space: nowrap;
    overflow: hidden;
    text-overflow: ellipsis;
    pointer-events: none;
    transition: all 0.2s ease-in-out;
    transform-origin: 0 0;
    align-self: anchor-center;
}

.Input:has([data-has-icon="false"]) label {
    display: none;
}

.Input> input:focus-within ~ label,
.Input> textarea:focus-within ~ label,
.Input> input:not(:placeholder-shown) ~ label,
.Input> textarea:not(:placeholder-shown) ~ label {
    transform: translateX(var(--label-transform-x))
            translateY(var(--label-transform-y))
            scale(var(--label-scale));
    top: 0rem;
    left: 0rem;
    height: auto;
    opacity: 1;
    color: var(--input-label-focus-color);
    background: var(--input-label-focus-bg);
    align-self: auto;
}

.InputIcon {
    pointer-events: none;
    padding-inline-start: 1rem;
}

.InputEnd {
    display: flex;
    gap: .25rem;
    justify-content: space-around;
    background: var(--input-bg, inherit);
    cursor: pointer;
}

.InputEnd:focus {
    outline: 2px solid transparent;
    outline-offset: 2px;
}

.ErrorTextInput {
    border-color: #EF4444;
}

.ErrorText {
    margin-top: 0.5rem;
    font-size: 0.875rem;
    line-height: 1.25rem;
    color: var(--ErrorText-col);
}

.RangeValue {
    position: absolute;
    left: var(--value-left, 0);
    transform: translateX(-50%);
    background: var(--input-label-focus-color, #983daf);
    color: white;
    padding: 0.25rem 0.5rem;
    border-radius: 0.25rem;
    font-size: 0.75rem;
    pointer-events: none;
    transition: opacity 0.2s;
}

input[type="range"]:hover ~ .RangeValue,
input[type="range"]:focus ~ .RangeValue {
    opacity: 1;
}
